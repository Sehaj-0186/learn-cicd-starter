name: ci

on:
  workflow_dispatch:
  pull_request:
    branches: [main]

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          
      - name: Check out code
        uses: actions/checkout@v3

      - name: Run units tests
        run: go test ./... -cover

      - name: install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run gosec
        run: gosec ./...

        
  styles:
    name: formatting tests
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Check out code
        uses: actions/checkout@v3

      - name: Run formatting tests
        run: test -z $(go fmt ./...)

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...
  generate_sbom:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3 
      
      - name: generate sbom
        uses: advanced-security/sbom-generator-action@v0.0.1
        id: sbom
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      
      - name: install gh
        run: |
          type -p curl >/dev/null || (apt update && apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && apt update \
          && apt install gh -y
      
      - name: Generate tar.gz file and upload release
        shell: bash
        run: |
          gh release create 1.1 --draft  --notes-file .CurrentChangelog.md --prerelease --title "cicd 1.1" --verify-tag
          tar -zcvf sbom.tar.gz ${{steps.sbom.outputs.fileName}}
          gh release upload 1.1 sbom.tar.gz --clobber


